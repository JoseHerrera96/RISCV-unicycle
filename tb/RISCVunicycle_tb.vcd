$date
	Sun May 25 23:27:36 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module RISCVunicycle_tb $end
$var wire 1 ! finish_flag $end
$var parameter 32 " CLK_PERIOD $end
$var reg 1 # clock $end
$var reg 1 $ rst $end
$scope module dut $end
$var wire 1 # clock $end
$var wire 1 $ rst $end
$var wire 1 % zero $end
$var wire 32 & pc_out [31:0] $end
$var wire 1 ' last_instr_flag $end
$var wire 32 ( instruct [31:0] $end
$var wire 32 ) ext_imm [31:0] $end
$var wire 32 * dout [31:0] $end
$var wire 32 + D2 [31:0] $end
$var wire 32 , D1 [31:0] $end
$var wire 32 - ALUout [31:0] $end
$var reg 32 . Aluin1 [31:0] $end
$var reg 32 / Aluin2 [31:0] $end
$var reg 5 0 R1 [4:0] $end
$var reg 5 1 R2 [4:0] $end
$var reg 5 2 Rd [4:0] $end
$var reg 32 3 addrs [31:0] $end
$var reg 1 4 aluSrc_cntrl_ready $end
$var reg 4 5 alu_op [3:0] $end
$var reg 1 6 alu_ready $end
$var reg 32 7 alu_src [31:0] $end
$var reg 1 8 branch $end
$var reg 32 9 branch_offset [31:0] $end
$var reg 1 : busy $end
$var reg 32 ; datainmemory [31:0] $end
$var reg 32 < dataregin [31:0] $end
$var reg 1 = decode_begin $end
$var reg 1 > decode_done $end
$var reg 1 ! finish_flag $end
$var reg 4 ? funct3 [3:0] $end
$var reg 7 @ funct7 [6:0] $end
$var reg 12 A imm [11:0] $end
$var reg 1 B lw_data_ready $end
$var reg 1 C mem_read $end
$var reg 1 D mem_write $end
$var reg 7 E opcode [6:0] $end
$var reg 1 F regenb $end
$var reg 1 G reset_zero_flag $end
$scope module extensorS $end
$var wire 32 H instruct [31:0] $end
$var reg 32 I out [31:0] $end
$var reg 7 J typ [6:0] $end
$upscope $end
$scope module modInstm $end
$var wire 32 K instruct [31:0] $end
$var wire 32 L addr [31:0] $end
$var reg 32 M d [31:0] $end
$var reg 32 N full_RF_temp [31:0] $end
$var reg 32 O instruct_temp [31:0] $end
$var reg 1 ' last_instr_flag $end
$scope begin $ivl_for_loop0 $end
$var integer 32 P i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 Q j [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 R i [31:0] $end
$upscope $end
$upscope $end
$scope module modPC $end
$var wire 1 8 branch $end
$var wire 32 S branch_offset [31:0] $end
$var wire 1 # clk $end
$var wire 1 ! finish_flag $end
$var wire 1 $ reset $end
$var reg 32 T branch_add [31:0] $end
$var reg 32 U pc_reg [31:0] $end
$var reg 32 V pc_reg_next [31:0] $end
$upscope $end
$scope module modalu $end
$var wire 32 W A [31:0] $end
$var wire 4 X ALUctl [3:0] $end
$var wire 32 Y B [31:0] $end
$var wire 1 G reset_zero_flag $end
$var reg 32 Z ALUout [31:0] $end
$var reg 1 % zero $end
$upscope $end
$scope module modmemory $end
$var wire 32 [ address [31:0] $end
$var wire 1 # clk $end
$var wire 1 C read_enable $end
$var wire 32 \ write_data [31:0] $end
$var wire 1 D write_enable $end
$var reg 32 ] read_data [31:0] $end
$upscope $end
$scope module modregfile $end
$var wire 32 ^ Data1 [31:0] $end
$var wire 32 _ Data2 [31:0] $end
$var wire 5 ` RD [4:0] $end
$var wire 5 a Read1 [4:0] $end
$var wire 5 b Read2 [4:0] $end
$var wire 1 F RegWrite $end
$var wire 32 c WriteData [31:0] $end
$var wire 1 # clock $end
$var wire 1 ! finish_flag $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 "
$end
#0
$dumpvars
bx c
b0 b
b0 a
b0 `
b0 _
b0 ^
bx ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b100 V
b11111111111111111111111111111100 U
bx T
b0 S
b100000 R
b100000 Q
b10000000 P
b11111111111111111111111111111111 O
bx N
b1111100 M
b11111111111111111111111111111100 L
bx K
bx J
b0 I
bx H
0G
0F
b0 E
0D
0C
0B
b0 A
bx @
b0 ?
0>
0=
bx <
b0 ;
0:
b0 9
08
b0 7
06
b0 5
04
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
bx *
b0 )
bx (
0'
b11111111111111111111111111111100 &
0%
1$
0#
0!
$end
#5000
1#
#10000
0#
#15000
1#
#20000
0#
#25000
1#
#30000
0#
#35000
1#
#40000
0#
#45000
1#
#50000
0#
#55000
1#
#60000
0#
#65000
1#
#70000
0#
#75000
1#
#80000
0#
#85000
1#
#90000
0#
#95000
1#
#100000
0#
#105000
1#
#110000
0#
#115000
1#
#120000
0#
#125000
1#
#130000
0#
#135000
1#
#140000
0#
#145000
1#
#150000
0#
#155000
1#
#160000
0#
#165000
1#
#170000
0#
#175000
1#
#180000
0#
#185000
1#
#190000
0#
#195000
1#
#200000
0#
#205000
1#
#210000
0#
#215000
1#
#220000
0#
#225000
1#
#230000
0#
#235000
1#
#240000
0#
#245000
1#
#250000
0#
#255000
1#
#260000
0#
#265000
1#
#270000
0#
#275000
1#
#280000
0#
#285000
1#
#290000
0#
#295000
1#
#300000
0#
#305000
1#
#310000
0#
#315000
1#
#320000
0#
#325000
1#
#330000
0#
#335000
1#
#340000
0#
#345000
1#
#350000
0#
#355000
1#
#360000
0#
#365000
1#
#370000
0#
#375000
1#
#380000
0#
#385000
1#
#390000
0#
#395000
1#
#400000
0#
#405000
1#
#410000
0#
#415000
1#
#420000
0#
#425000
1#
#430000
0#
#435000
1#
#440000
0#
#445000
1#
#450000
0#
#455000
1#
#460000
0#
#465000
1#
#470000
0#
#475000
1#
#480000
0#
#485000
1#
#490000
0#
#495000
1#
#500000
0#
#505000
1#
#510000
0#
#515000
1#
#520000
0#
#525000
1#
#530000
0#
#535000
1#
#540000
0#
#545000
1#
#550000
0#
#555000
1#
#560000
0#
#565000
1#
#570000
0#
#575000
1#
#580000
0#
#585000
1#
#590000
0#
#595000
1#
#600000
0#
#605000
1#
#610000
0#
#615000
1#
#620000
0#
#625000
1#
#630000
0#
#635000
1#
#640000
0#
#645000
1#
#650000
0#
#655000
1#
#660000
0#
#665000
1#
#670000
0#
#675000
1#
#680000
0#
#685000
1#
#690000
0#
#695000
1#
#700000
0#
#705000
1#
#710000
0#
#715000
1#
#720000
0#
#725000
1#
#730000
0#
#735000
1#
#740000
0#
#745000
1#
#750000
0#
#755000
1#
#760000
0#
#765000
1#
#770000
0#
#775000
1#
#780000
0#
#785000
1#
#790000
0#
#795000
1#
#800000
0#
#805000
1#
#810000
0#
#815000
1#
#820000
0#
#825000
1#
#830000
0#
#835000
1#
#840000
0#
#845000
1#
#850000
0#
#855000
1#
#860000
0#
#865000
1#
#870000
0#
#875000
1#
#880000
0#
#885000
1#
#890000
0#
#895000
1#
#900000
0#
#905000
1#
#910000
0#
#915000
1#
#920000
0#
#925000
1#
#930000
0#
#935000
1#
#940000
0#
#945000
1#
#950000
0#
#955000
1#
#960000
0#
#965000
1#
#970000
0#
#975000
1#
#980000
0#
#985000
1#
#990000
0#
#995000
1#
#1000000
0#
0$
#1005000
b0 <
b0 c
06
04
1F
0>
b10 5
b10 X
b1 2
b1 `
b10011 E
0:
b10011 J
0=
b10010011 (
b10010011 H
b10010011 K
b0 &
b0 L
b0 U
1#
#1010000
0#
#1015000
b101 <
b101 c
b101 -
b101 Z
06
b101 /
b101 Y
04
b101 7
0>
b10 2
b10 `
0:
1F
b101 )
b101 I
0=
b10100000000000100010011 (
b10100000000000100010011 H
b10100000000000100010011 K
b100 &
b100 L
b100 U
1#
#1020000
0#
#1025000
1B
1C
b1 0
b1 a
b0 -
b0 Z
06
b0 /
b0 Y
04
b0 7
b100000 T
0>
b1100 <
b1100 c
b11000 9
b11000 S
08
b0 A
b1000 2
b1000 `
b11 E
0:
1F
b0 )
b0 I
b11 J
0=
b1010010000000011 (
b1010010000000011 H
b1010010000000011 K
b100000 &
b100000 L
b100000 U
1#
#1030000
0#
#1035000
b101 3
b101 [
b101 -
b101 Z
06
b101 .
b101 W
04
0>
b1001 2
b1001 `
b101 ,
b101 ^
b10 0
b10 a
0:
1C
1F
0=
b101 <
b101 c
1B
b101 *
b101 ]
b10010010010000011 (
b10010010010000011 H
b10010010010000011 K
b100100 &
b100100 L
b100100 U
1#
#1040000
0#
#1045000
b0 3
b0 [
b0 -
b0 Z
06
b0 .
b0 W
04
1D
0>
b0 ,
b0 ^
b1 0
b1 a
b100011 E
0:
0C
0F
b100011 J
0=
bx <
bx c
0B
b100100001010000000100011 (
b100100001010000000100011 H
b100100001010000000100011 K
b101000 &
b101000 L
b101000 U
bx *
bx ]
1#
#1050000
0#
#1055000
b101 3
b101 [
b101 -
b101 Z
06
b101 .
b101 W
04
0>
b101 ,
b101 ^
b10 0
b10 a
0:
1D
0=
b100000010010000000100011 (
b100000010010000000100011 H
b100000010010000000100011 K
b101100 &
b101100 L
b101100 U
1#
#1060000
0#
#1065000
b0 3
b0 [
1B
1C
b0 -
b0 Z
06
b0 .
b0 W
04
b110100 +
b110100 _
b1100 T
0>
1F
b110100 <
b110100 c
b11111111111111111111111111011100 9
b11111111111111111111111111011100 S
08
b100 2
b100 `
b0 ,
b0 ^
b1 0
b1 a
b11 E
0:
0D
b11 J
0=
b1010001000000011 (
b1010001000000011 H
b1010001000000011 K
b1100 &
b1100 L
b1100 U
1#
#1070000
0#
#1075000
b101 3
b101 [
b101 -
b101 Z
06
b101 .
b101 W
04
0>
b101 2
b101 `
b101 ,
b101 ^
b10 0
b10 a
0:
1C
1F
0=
b0 <
b0 c
1B
b0 *
b0 ]
b10010001010000011 (
b10010001010000011 H
b10010001010000011 K
b10000 &
b10000 L
b10000 U
1#
#1080000
0#
#1085000
b1 <
b1 c
06
b10 /
b10 Y
b0 .
b0 W
04
b10 7
b1 -
b1 Z
0>
b111 5
b111 X
b0 @
b110 2
b110 `
b10 ?
b10 +
b10 _
b101 1
b101 b
b0 ,
b0 ^
b100 0
b100 a
b110011 E
0:
0C
1F
b110011 J
0=
0B
b10100100010001100110011 (
b10100100010001100110011 H
b10100100010001100110011 K
b10100 &
b10100 L
b10100 U
1#
#1090000
0#
#1095000
b0 2
b0 `
b110100 T
08
b110100 <
b110100 c
0%
06
b0 /
b0 Y
b110100 .
b110100 W
04
b0 7
b110100 -
b110100 Z
0>
b10 5
b10 X
b11100 9
b11100 S
b0 ?
b110100 +
b110100 _
b0 1
b0 b
b110100 ,
b110100 ^
b0 0
b0 a
b10011 E
0:
1F
b0 )
b0 I
b10011 J
0=
b10011 (
b10011 H
b10011 K
b110100 &
b110100 L
b110100 U
1#
#1100000
0#
#1105000
06
04
1!
0>
b0 ,
b0 ^
b11111 0
b11111 a
b1111111 E
0:
0F
b1111111 J
1'
0=
b11111111111111111111111111111111 (
b11111111111111111111111111111111 H
b11111111111111111111111111111111 K
b111000 &
b111000 L
b111000 U
1#
